
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: minions.kubernetes.ov3rlord.me
spec:
  group: kubernetes.ov3rlord.me
  names:
    kind: Minion
    plural: minions
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Minion is the Schema for the minions API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MinionSpec defines the desired state of Minion
          properties:
            kubeconfig:
              type: string
            master:
              type: string
            name:
              type: string
            token:
              type: string
          type: object
        status:
          description: MinionStatus defines the observed state of Minion
          properties:
            lastTimestamp:
              format: date-time
              type: string
            nodeStatus:
              description: NodeStatus as reported by each minion
              properties:
                kubeconfig:
                  type: string
                message:
                  type: string
                state:
                  description: HealthState ...
                  type: string
                token:
                  type: string
              type: object
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
