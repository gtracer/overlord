apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - command:
        - /manager
        args:
        - --enable-leader-election
        image: controller:latest
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: system
  labels:
    app: overlord
spec:
  selector:
    matchLabels:
      app: overlord
  replicas: 1
  template:
    metadata:
      labels:
        app: overlord
    spec:
      containers:
      - command:
        - /overlord
        image: quay.io/awesomenix/overlord:latest
        name: overlord
        ports:
        - containerPort: 8080
          name: overlord-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: overlord
  name: overlord-service
  namespace: system
spec:
  ports:
  - name: http
    port: 8080
    targetPort: overlord-server
  selector:
    app: overlord
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inlets
  labels:
    app: inlets
spec:
  selector:
    matchLabels:
      app: inlets
  replicas: 1
  template:
    metadata:
      labels:
        app: inlets
    spec:
      containers:
      - name: inlets
        image: alexellis2/inlets:2.1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8090
          name: inlets-server
          protocol: TCP
        command: ["inlets"]
        args:
        - "server"
        - "--port=8090"
        - "--token=06536ae6eb87a72b9bef1d55d6bb0a7c9179c76a"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: inlets
  name: inlets-service
  namespace: system
spec:
  ports:
  - name: http
    port: 8090
    targetPort: inlets-server
  selector:
    app: inlets
  type: LoadBalancer
